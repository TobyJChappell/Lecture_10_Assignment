library(ggplot2)
#PART 1
Is_Versicolor <- iris$Species == "versicolor"
iris_plot <- ggplot(iris,aes(x=Sepal.Width,y=Sepal.Length))
#Shape
iris_plot + geom_point(aes(shape=Is_Versicolor))
#Brightness
iris_plot + geom_point(aes(color=Is_Versicolor)) +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(.5,1,.25), hsv(.5,1,.75)))
#remotes::install_github("coolbutuseless/ggecho")
library(ggecho)
#Blur
blur <- ggplot(iris[Is_Versicolor, ],aes(x=Sepal.Width,y=Sepal.Length)) + geom_point(size=2.5)
blur + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.1)
#PART 2
#Hue and Brightness
iris_plot + geom_point(aes(color=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.15,1,.15), hsv(.5,1,.5), hsv(.85,1,.85)))
#Shape and Brightness
iris_plot + geom_point(aes(color=Species,shape=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.5,1,.15), hsv(.5,1,.5), hsv(.5,1,.85)))
#PART 2
#Shape and Hue
iris_plot + geom_point(aes(color=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.15,1,1), hsv(.5,1,1), hsv(.85,1,1)))
#PART 2
#Shape and Hue
iris_plot + geom_point(aes(color=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.15,1,.75), hsv(.5,1,.75), hsv(.85,1,.75)))
#PART 2
#Shape and Hue
iris_plot + geom_point(aes(color=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.1,1,.75), hsv(.5,1,.75), hsv(.85,1,.75)))
#PART 2
#Shape and Hue
iris_plot + geom_point(aes(color=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.1,1,.75), hsv(.5,1,.75), hsv(.9,1,.75)))
#PART 2
#Shape and Hue
iris_plot + geom_point(aes(color=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.1,1,.85), hsv(.5,1,.85), hsv(.9,1,.85)))
#PART 2
#Shape and Hue
iris_plot + geom_point(aes(color=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.1,1,.9), hsv(.5,1,.9), hsv(.9,1,.9)))
#PART 2
#Shape and Hue
iris_plot + geom_point(aes(color=Species,shape=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.1,1,.9), hsv(.5,1,.9), hsv(.9,1,.9)))
#Shape and Brightness
iris_plot + geom_point(aes(color=Species,shape=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.5,1,.15), hsv(.5,1,.5), hsv(.5,1,.85)))
#Does proportion change with clarity
ggplot(data=diamonds,aes(x=Cut,fill=Cut)) +
geom_density()
library(ggplot2)
#install.packages("dplyr")
library(dplyr)
library(viridis)
diamonds <- read.csv(file = 'diamonds.csv')
diamonds <- diamonds %>% rename(Cut=cut, Clarity=clarity)
diamonds$Cut <- factor(diamonds$Cut,levels=c("Fair","Good","Very Good","Premium","Ideal"))
diamonds$Clarity <- factor(diamonds$Clarity,levels=c("I1", "SI2", "SI1", "VS2", "VS1", "VVS2", "VVS1", "IF"))
cut_group <- diamonds %>% group_by(Cut) %>%
summarise(count = n()) %>%
mutate(per=count/sum(count)) %>%
ungroup()
#Does proportion change with clarity
ggplot(data=diamonds,aes(x=Cut,fill=Cut)) +
geom_density()
#Does proportion change with clarity
ggplot(data=cut_group,aes(x=clarity,y=per,fill=Cut)) +
geom_bar(stat="identity") +
xlab("") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Does proportion change with clarity
ggplot(data=diamond,aes(x=clarity,y=per,fill=Cut)) +
geom_bar(stat="identity") +
xlab("") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Does proportion change with clarity
ggplot(data=diamonds,aes(x=clarity,y=per,fill=Cut)) +
geom_bar(stat="identity") +
xlab("") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Does proportion change with clarity
ggplot(data=diamonds,aes(x=Clarity,fill=Cut)) +
geom_bar(stat="identity") +
xlab("") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Does proportion change with clarity
ggplot(data=diamonds,aes(x=Clarity,y=Cut,fill=Cut)) +
geom_bar(stat="identity") +
xlab("") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Does proportion change with clarity
ggplot(data=diamonds,aes(x=Clarity,y=Cut,fill=Cut)) +
geom_bar(stat="identity") +
xlab("") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut") +
scale_fill_viridis_d()
clarity_group <- diamonds %>% group_by(Clarity,Cut) %>%
summarise(count = n()) %>%
group_by(Clarity) %>%
mutate(per=count/sum(count)) %>%
ungroup()
#Does proportion change with clarity
ggplot(data=clarity_group,aes(x=Clarity,y=Cut,fill=Cut)) +
geom_bar(stat="identity") +
xlab("Clarity") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut") +
scale_fill_viridis_d()
#Does proportion change with clarity
ggplot(data=clarity_group,aes(x=Clarity,y=per,fill=Cut)) +
geom_bar(stat="identity") +
xlab("Clarity") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut") +
scale_fill_viridis_d()
#Does proportion change with clarity
ggplot(data=clarity_group,aes(x=Clarity,y=per,fill=Cut)) +
geom_bar(stat="identity") +
xlab("Clarity") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Does proportion change with clarity
ggplot(data=clarity_group,aes(x=Clarity,y=per,fill=Cut)) +
geom_bar(stat="identity") +
xlab("Clarity") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Side-by-Side Bars
ggplot(data=diamond,aes(x=Clarity,fill=Cut)) +
geom_bar(stat="identity") +
xlab("Clarity") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Side-by-Side Bars
ggplot(data=diamonds,aes(x=Clarity,fill=Cut)) +
geom_bar(stat="identity") +
xlab("Clarity") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
scale_fill_viridis_d()
#Side-by-Side Bars
ggplot(data=diamonds,aes(x=Clarity,y=count(Clarity),fill=Cut)) +
geom_bar(stat="identity") +
xlab("Clarity") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
scale_fill_viridis_d()
#Side-by-Side Bars
ggplot(data=diamonds,aes(x=Clarity,y="",fill=Cut)) +
geom_bar(stat="identity") +
xlab("Clarity") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
scale_fill_viridis_d()
#Pie Charts
ggplot(cut_group, aes(x= "", y = per, fill=Cut)) +
geom_col() +
coord_polar("y", start=0) +
facet_wrap(~Clarity)
#Pie Charts
ggplot(clarity_group, aes(x= "", y = per, fill=Cut)) +
geom_col() +
coord_polar("y", start=0) +
facet_wrap(~Clarity)
#Pie
ggplot(cut_group, aes(x= "", y = per, fill=Cut)) +
geom_col() +
coord_polar("y", start=0) +
ggtitle("Proportion of Diamonds by Cut") +
xlab("") +
ylab("") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Pie Charts
ggplot(clarity_group, aes(x= "", y = per, fill=Cut)) +
geom_col() +
coord_polar("y", start=0) +
facet_wrap(~Clarity)  +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
xlab("") +
ylab("") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
library(ggplot2)
library(viridis)
#install.packages("dplyr")
library(dplyr)
diamonds <- read.csv(file = 'diamonds.csv')
diamonds <- diamonds %>% rename(Cut=cut, Clarity=clarity)
diamonds$Cut <- factor(diamonds$Cut,levels=c("Fair","Good","Very Good","Premium","Ideal"))
diamonds$Clarity <- factor(diamonds$Clarity,levels=c("I1", "SI2", "SI1", "VS2", "VS1", "VVS2", "VVS1", "IF"))
cut_group <- diamonds %>% group_by(Cut) %>%
summarise(count = n()) %>%
mutate(per=count/sum(count)) %>%
ungroup()
clarity_group <- diamonds %>% group_by(Clarity,Cut) %>%
summarise(count = n()) %>%
group_by(Clarity) %>%
mutate(per=count/sum(count)) %>%
ungroup()
#Side-by-Side Bars
ggplot(data=diamonds,aes(x=Cut,fill=Cut)) +
geom_bar() +
ggtitle("Proportion of Diamonds by Cut") +
ylab(label="Number of Diamonds") +
scale_fill_viridis_d()
#Pie
ggplot(cut_group, aes(x= "", y = per, fill=Cut)) +
geom_col() +
coord_polar("y", start=0) +
ggtitle("Proportion of Diamonds by Cut") +
xlab("") +
ylab("") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Stacked Bar
ggplot(data=cut_group,aes(x="",y=per,fill=Cut)) +
geom_bar(stat="identity") +
xlab("") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Stacked Bars ()
ggplot(data=diamonds,aes(x=Clarity,y="",fill=Cut)) +
geom_bar(stat="identity") +
xlab("Clarity") +
ylab("Number of Diamonds") +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
scale_fill_viridis_d()
#Stacked Bars
ggplot(data=clarity_group,aes(x=Clarity,y=per,fill=Cut)) +
geom_bar(stat="identity") +
xlab("Clarity") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Side-by-Side Bars
ggplot(data=diamonds,aes(x=Clarity,y="",fill=Cut)) +
geom_bar(stat="identity", position="dodge") +
xlab("Clarity") +
ylab("Number of Diamonds") +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
scale_fill_viridis_d()
#Side-by-Side Bars
ggplot(data=diamonds,aes(x=Clarity,fill=Cut)) +
geom_bar(stat="identity", position="dodge") +
xlab("Clarity") +
ylab("Number of Diamonds") +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
scale_fill_viridis_d()
#Side-by-Side Bars
ggplot(data=diamonds,aes(x=Clarity,fill=Cut)) +
geom_bar(position="dodge") +
xlab("Clarity") +
ylab("Number of Diamonds") +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
scale_fill_viridis_d()
#Side-by-Side Bars (Percent)
ggplot(data=clarity_group,aes(x=Clarity,y=per,fill=Cut)) +
geom_bar(stat="identity",position="dodge") +
xlab("Clarity") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Side-by-Side Bars (Percent)
ggplot(data=clarity_group,aes(x=Clarity,y=per,fill=Cut)) +
geom_density() +
xlab("Clarity") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Side-by-Side Bars (Percent)
ggplot(data=clarity_group,aes(x=Clarity,y=per)) +
geom_density() +
xlab("Clarity") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut for each Clarity") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
